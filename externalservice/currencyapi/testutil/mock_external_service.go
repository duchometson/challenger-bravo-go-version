// Code generated by MockGen. DO NOT EDIT.
// Source: bravo/externalservice/currencyapi (interfaces: ExternalApi)

// Package testutil is a generated GoMock package.
package testutil

import (
	big "math/big"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExternalApi is a mock of ExternalApi interface.
type MockExternalApi struct {
	ctrl     *gomock.Controller
	recorder *MockExternalApiMockRecorder
}

// MockExternalApiMockRecorder is the mock recorder for MockExternalApi.
type MockExternalApiMockRecorder struct {
	mock *MockExternalApi
}

// NewMockExternalApi creates a new mock instance.
func NewMockExternalApi(ctrl *gomock.Controller) *MockExternalApi {
	mock := &MockExternalApi{ctrl: ctrl}
	mock.recorder = &MockExternalApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExternalApi) EXPECT() *MockExternalApiMockRecorder {
	return m.recorder
}

// LatestRatesSingle mocks base method.
func (m *MockExternalApi) LatestRatesSingle(arg0 string) (*big.Float, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LatestRatesSingle", arg0)
	ret0, _ := ret[0].(*big.Float)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LatestRatesSingle indicates an expected call of LatestRatesSingle.
func (mr *MockExternalApiMockRecorder) LatestRatesSingle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LatestRatesSingle", reflect.TypeOf((*MockExternalApi)(nil).LatestRatesSingle), arg0)
}

// ValidateCode mocks base method.
func (m *MockExternalApi) ValidateCode(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCode", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateCode indicates an expected call of ValidateCode.
func (mr *MockExternalApiMockRecorder) ValidateCode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCode", reflect.TypeOf((*MockExternalApi)(nil).ValidateCode), arg0)
}
