// Code generated by MockGen. DO NOT EDIT.
// Source: bravo/application/currency (interfaces: ExternalService)

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExternalService is a mock of ExternalService interface.
type MockExternalService struct {
	ctrl     *gomock.Controller
	recorder *MockExternalServiceMockRecorder
}

// MockExternalServiceMockRecorder is the mock recorder for MockExternalService.
type MockExternalServiceMockRecorder struct {
	mock *MockExternalService
}

// NewMockExternalService creates a new mock instance.
func NewMockExternalService(ctrl *gomock.Controller) *MockExternalService {
	mock := &MockExternalService{ctrl: ctrl}
	mock.recorder = &MockExternalServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExternalService) EXPECT() *MockExternalServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockExternalService) Get(arg0 string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockExternalServiceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockExternalService)(nil).Get), arg0)
}
